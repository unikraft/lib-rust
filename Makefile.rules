# Build rust projects via Cargo
# NOTE: We are not using most of the flags such as COMPFLAGS due to incompatibilities between rustc and GCC.
# buildrule_cargo $libname,$source,$variant,$target,$extraflags
# $$(RUSTCFLAGS) $$(RUSTCFLAGS-y) $$(RUSTCFLAGS_EXTRA)
define buildrule_toml =
$(4): $(2) | preprocess
	$(call build_cmd,CARGO,$(1),$(4),\
		UK_CINCLUDES="$$(CINCLUDES) $$(CINCLUDES-y) $$($(call vprefix_lib,$(1),CINCLUDES)) $$($(call vprefix_lib,$(1),CINCLUDES-y))" \
		$(CARGO) $$($(call vprefix_lib,$(1),RUSTCHANNEL)) rustc \
		 	$$(CARGOFLAGS) $$(CARGOFLAGS-y) $$(CARGOFLAGS_EXTRA) \
			--manifest-path=$(2) \
			$$($(call vprefix_lib,$(1),CARGOFLAGS)) $$($(call vprefix_lib,$(1),CARGOFLAGS-y)) \
			-- \
			$$($(call vprefix_lib,$(1),RUSTCFLAGS)) $$($(call vprefix_lib,$(1),RUSTCFLAGS-y)) \
			$$($(call vprefix_src,$(1),$(2),$(3),FLAGS)) $$($(call vprefix_src,$(1),$(2),$(3),FLAGS-y)) \
			--cfg '__LIBNAME__="$(1)"' $(if $(3),--cfg '__VARIANT__="$(3)"') \
			--emit link=$(4)
	)

UK_SRCS-y += $(2)
UK_DEPS-y += $(call out2dep,$(4))
UK_ALIBS-y += $(4)
$(eval $(call vprefix_lib,$(1),OBJS-y) += $(4))
$(eval $(call vprefix_lib,$(1),CLEAN-y) += $(call build_clean,$(4)) $(call out2dep,$(4)))
.PHONY: $(4)
endef

